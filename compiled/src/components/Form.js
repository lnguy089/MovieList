// import React from 'react';
class Form extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: '',
      chosen: {
        title: ''
      },
      bool: false,
      add: ''
    }; // this.handleSubmit = this.handleSubmit.bind(this);

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleAddClicker = this.handleAddClicker.bind(this);
  }

  handleChange(event) {
    this.setState({
      value: event.target.value
    });
  }

  handleAddClicker(event) {
    this.setState({
      add: event.target.value
    });
  }

  handleSubmit(event) {
    event.preventDefault();

    if (this.state.value !== '') {
      var truth = false;

      if (this.props.movies !== {}) {
        this.props.movies.map((item, i) => {
          if (this.state.value === this.props.movies[i].title) {
            truth = true;
          }
        });
      }

      this.setState({
        chosen: {
          title: this.state.value
        },
        bool: truth,
        value: ''
      }, () => {
        if (truth === false) {
          alert('Movie NOT found :(');
        } else {
          this.props.searchMovie([this.state.chosen]);
        }
      } // this.props.searchMovie([this.state.chosen);
      );
    } else if (this.state.add !== '') {
      this.props.addMovie({
        title: this.state.add,
        watched: false
      });
      this.setState({
        add: ''
      }, () => this.props.searchMovie(this.props.movies));
    } else {
      this.props.searchMovie(this.props.movies);
    }
  }

  render() {
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.handleSubmit
    }, /*#__PURE__*/React.createElement("input", {
      value: this.state.add,
      onChange: this.handleAddClicker,
      placeholder: "ADD SUMTHING"
    }), /*#__PURE__*/React.createElement("button", null, "Add"), /*#__PURE__*/React.createElement("input", {
      value: this.state.value,
      onChange: this.handleChange,
      placeholder: "Search"
    }), /*#__PURE__*/React.createElement("button", null, "Search Movie"));
  }

}

export default Form; // <button onClick={ (event) => {
//   this.props.addMovie({title: this.state.add});
//   this.setState({add: ''});
//   }}>
//   Add</button>
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Zvcm0uanN4Il0sIm5hbWVzIjpbIkZvcm0iLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsInZhbHVlIiwiY2hvc2VuIiwidGl0bGUiLCJib29sIiwiYWRkIiwiaGFuZGxlQ2hhbmdlIiwiYmluZCIsImhhbmRsZVN1Ym1pdCIsImhhbmRsZUFkZENsaWNrZXIiLCJldmVudCIsInNldFN0YXRlIiwidGFyZ2V0IiwicHJldmVudERlZmF1bHQiLCJ0cnV0aCIsIm1vdmllcyIsIm1hcCIsIml0ZW0iLCJpIiwiYWxlcnQiLCJzZWFyY2hNb3ZpZSIsImFkZE1vdmllIiwid2F0Y2hlZCIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxJQUFOLFNBQW1CQyxLQUFLLENBQUNDLFNBQXpCLENBQW1DO0FBQ2pDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLEtBQUssRUFBRSxFQURJO0FBRVhDLE1BQUFBLE1BQU0sRUFBRTtBQUFDQyxRQUFBQSxLQUFLLEVBQUU7QUFBUixPQUZHO0FBR1hDLE1BQUFBLElBQUksRUFBRSxLQUhLO0FBSVhDLE1BQUFBLEdBQUcsRUFBRTtBQUpNLEtBQWIsQ0FGaUIsQ0FRakI7O0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCQyxJQUFsQixDQUF1QixJQUF2QixDQUFwQjtBQUNBLFNBQUtDLFlBQUwsR0FBb0IsS0FBS0EsWUFBTCxDQUFrQkQsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBcEI7QUFDQSxTQUFLRSxnQkFBTCxHQUF3QixLQUFLQSxnQkFBTCxDQUFzQkYsSUFBdEIsQ0FBMkIsSUFBM0IsQ0FBeEI7QUFDRDs7QUFDREQsRUFBQUEsWUFBWSxDQUFDSSxLQUFELEVBQVE7QUFDbEIsU0FBS0MsUUFBTCxDQUFjO0FBQUNWLE1BQUFBLEtBQUssRUFBRVMsS0FBSyxDQUFDRSxNQUFOLENBQWFYO0FBQXJCLEtBQWQ7QUFDRDs7QUFDRFEsRUFBQUEsZ0JBQWdCLENBQUNDLEtBQUQsRUFBUTtBQUN0QixTQUFLQyxRQUFMLENBQWM7QUFBQ04sTUFBQUEsR0FBRyxFQUFFSyxLQUFLLENBQUNFLE1BQU4sQ0FBYVg7QUFBbkIsS0FBZDtBQUNEOztBQUVETyxFQUFBQSxZQUFZLENBQUNFLEtBQUQsRUFBUTtBQUNsQkEsSUFBQUEsS0FBSyxDQUFDRyxjQUFOOztBQUNBLFFBQUcsS0FBS2IsS0FBTCxDQUFXQyxLQUFYLEtBQXNCLEVBQXpCLEVBQThCO0FBQzVCLFVBQUlhLEtBQUssR0FBRyxLQUFaOztBQUNBLFVBQUcsS0FBS2YsS0FBTCxDQUFXZ0IsTUFBWCxLQUFzQixFQUF6QixFQUE2QjtBQUMzQixhQUFLaEIsS0FBTCxDQUFXZ0IsTUFBWCxDQUFrQkMsR0FBbEIsQ0FBdUIsQ0FBQ0MsSUFBRCxFQUFPQyxDQUFQLEtBQWM7QUFDbkMsY0FBRyxLQUFLbEIsS0FBTCxDQUFXQyxLQUFYLEtBQXFCLEtBQUtGLEtBQUwsQ0FBV2dCLE1BQVgsQ0FBa0JHLENBQWxCLEVBQXFCZixLQUE3QyxFQUFvRDtBQUNsRFcsWUFBQUEsS0FBSyxHQUFHLElBQVI7QUFDRDtBQUNGLFNBSkQ7QUFLRDs7QUFDRCxXQUFLSCxRQUFMLENBQWM7QUFBQ1QsUUFBQUEsTUFBTSxFQUFFO0FBQUNDLFVBQUFBLEtBQUssRUFBRSxLQUFLSCxLQUFMLENBQVdDO0FBQW5CLFNBQVQ7QUFBb0NHLFFBQUFBLElBQUksRUFBRVUsS0FBMUM7QUFBaURiLFFBQUFBLEtBQUssRUFBRTtBQUF4RCxPQUFkLEVBQ0EsTUFBSztBQUNILFlBQUlhLEtBQUssS0FBSyxLQUFkLEVBQXFCO0FBQ25CSyxVQUFBQSxLQUFLLENBQUMsb0JBQUQsQ0FBTDtBQUNELFNBRkQsTUFFTztBQUNMLGVBQUtwQixLQUFMLENBQVdxQixXQUFYLENBQXVCLENBQUMsS0FBS3BCLEtBQUwsQ0FBV0UsTUFBWixDQUF2QjtBQUNEO0FBQ0YsT0FQRCxDQVFBO0FBUkE7QUFVRCxLQW5CRCxNQW1CTyxJQUFHLEtBQUtGLEtBQUwsQ0FBV0ssR0FBWCxLQUFtQixFQUF0QixFQUEwQjtBQUMvQixXQUFLTixLQUFMLENBQVdzQixRQUFYLENBQW9CO0FBQUNsQixRQUFBQSxLQUFLLEVBQUUsS0FBS0gsS0FBTCxDQUFXSyxHQUFuQjtBQUF3QmlCLFFBQUFBLE9BQU8sRUFBRTtBQUFqQyxPQUFwQjtBQUNBLFdBQUtYLFFBQUwsQ0FBYztBQUFDTixRQUFBQSxHQUFHLEVBQUU7QUFBTixPQUFkLEVBQXlCLE1BQU0sS0FBS04sS0FBTCxDQUFXcUIsV0FBWCxDQUF1QixLQUFLckIsS0FBTCxDQUFXZ0IsTUFBbEMsQ0FBL0I7QUFDRCxLQUhNLE1BSUY7QUFDSCxXQUFLaEIsS0FBTCxDQUFXcUIsV0FBWCxDQUF1QixLQUFLckIsS0FBTCxDQUFXZ0IsTUFBbEM7QUFDRDtBQUNGOztBQUNEUSxFQUFBQSxNQUFNLEdBQUc7QUFDUCx3QkFDRTtBQUFNLE1BQUEsUUFBUSxFQUFFLEtBQUtmO0FBQXJCLG9CQUNFO0FBQU8sTUFBQSxLQUFLLEVBQUUsS0FBS1IsS0FBTCxDQUFXSyxHQUF6QjtBQUE4QixNQUFBLFFBQVEsRUFBRSxLQUFLSSxnQkFBN0M7QUFBK0QsTUFBQSxXQUFXLEVBQUM7QUFBM0UsTUFERixlQUVFLDBDQUZGLGVBR0U7QUFBTyxNQUFBLEtBQUssRUFBRSxLQUFLVCxLQUFMLENBQVdDLEtBQXpCO0FBQWdDLE1BQUEsUUFBUSxFQUFFLEtBQUtLLFlBQS9DO0FBQTZELE1BQUEsV0FBVyxFQUFDO0FBQXpFLE1BSEYsZUFJRSxtREFKRixDQURGO0FBUUQ7O0FBM0RnQzs7QUErRG5DLGVBQWVYLElBQWYsQyxDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuY2xhc3MgRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB2YWx1ZTogJycsXG4gICAgICBjaG9zZW46IHt0aXRsZTogJyd9LFxuICAgICAgYm9vbDogZmFsc2UsXG4gICAgICBhZGQ6ICcnLFxuICAgIH1cbiAgICAvLyB0aGlzLmhhbmRsZVN1Ym1pdCA9IHRoaXMuaGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlU3VibWl0ID0gdGhpcy5oYW5kbGVTdWJtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZUFkZENsaWNrZXIgPSB0aGlzLmhhbmRsZUFkZENsaWNrZXIuYmluZCh0aGlzKTtcbiAgfVxuICBoYW5kbGVDaGFuZ2UoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHt2YWx1ZTogZXZlbnQudGFyZ2V0LnZhbHVlfSk7XG4gIH1cbiAgaGFuZGxlQWRkQ2xpY2tlcihldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe2FkZDogZXZlbnQudGFyZ2V0LnZhbHVlfSk7XG4gIH1cblxuICBoYW5kbGVTdWJtaXQoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmKHRoaXMuc3RhdGUudmFsdWUgIT09ICAnJykgIHtcbiAgICAgIHZhciB0cnV0aCA9IGZhbHNlO1xuICAgICAgaWYodGhpcy5wcm9wcy5tb3ZpZXMgIT09IHt9KSB7XG4gICAgICAgIHRoaXMucHJvcHMubW92aWVzLm1hcCggKGl0ZW0sIGkpID0+ICB7XG4gICAgICAgICAgaWYodGhpcy5zdGF0ZS52YWx1ZSA9PT0gdGhpcy5wcm9wcy5tb3ZpZXNbaV0udGl0bGUpIHtcbiAgICAgICAgICAgIHRydXRoID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICB0aGlzLnNldFN0YXRlKHtjaG9zZW46IHt0aXRsZTogdGhpcy5zdGF0ZS52YWx1ZX0sIGJvb2w6IHRydXRoLCB2YWx1ZTogJyd9LFxuICAgICAgKCkgPT57XG4gICAgICAgIGlmICh0cnV0aCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBhbGVydCgnTW92aWUgTk9UIGZvdW5kIDooJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5zZWFyY2hNb3ZpZShbdGhpcy5zdGF0ZS5jaG9zZW5dKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gdGhpcy5wcm9wcy5zZWFyY2hNb3ZpZShbdGhpcy5zdGF0ZS5jaG9zZW4pO1xuICAgICAgKTtcbiAgICB9IGVsc2UgaWYodGhpcy5zdGF0ZS5hZGQgIT09ICcnKSB7XG4gICAgICB0aGlzLnByb3BzLmFkZE1vdmllKHt0aXRsZTogdGhpcy5zdGF0ZS5hZGQsIHdhdGNoZWQ6IGZhbHNlfSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHthZGQ6ICcnfSwgKCkgPT4gdGhpcy5wcm9wcy5zZWFyY2hNb3ZpZSh0aGlzLnByb3BzLm1vdmllcykpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMucHJvcHMuc2VhcmNoTW92aWUodGhpcy5wcm9wcy5tb3ZpZXMpO1xuICAgIH1cbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxmb3JtIG9uU3VibWl0PXt0aGlzLmhhbmRsZVN1Ym1pdH0+XG4gICAgICAgIDxpbnB1dCB2YWx1ZT17dGhpcy5zdGF0ZS5hZGR9IG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUFkZENsaWNrZXJ9IHBsYWNlaG9sZGVyPSdBREQgU1VNVEhJTkcnIC8+XG4gICAgICAgIDxidXR0b24+QWRkPC9idXR0b24+XG4gICAgICAgIDxpbnB1dCB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZX0gb25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfSBwbGFjZWhvbGRlcj0nU2VhcmNoJy8+XG4gICAgICAgIDxidXR0b24+U2VhcmNoIE1vdmllPC9idXR0b24+XG4gICAgICA8L2Zvcm0+XG4gICAgKVxuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVxuLy8gPGJ1dHRvbiBvbkNsaWNrPXsgKGV2ZW50KSA9PiB7XG4vLyAgIHRoaXMucHJvcHMuYWRkTW92aWUoe3RpdGxlOiB0aGlzLnN0YXRlLmFkZH0pO1xuLy8gICB0aGlzLnNldFN0YXRlKHthZGQ6ICcnfSk7XG4vLyAgIH19PlxuLy8gICBBZGQ8L2J1dHRvbj4iXX0=